const e=new class{isPlaying=!1;voiceCache=new Map;voicesLoaded=!1;debugMode=!0;characterVoices=[{id:"sarcastic_narrator",name:"Sarcastic Narrator",description:"Deep, gravelly voice with dramatic pauses and dry wit",voiceSettings:{pitch:.75,rate:.75,volume:.85},personality:{enthusiasm:20,sarcasm:95,warmth:30},voicePreferences:{gender:"male",age:"mature",accent:"american"}},{id:"cheerful_host",name:"Cheerful Host",description:"Bright, bubbly voice with infectious energy and enthusiasm",voiceSettings:{pitch:1.25,rate:1.2,volume:.9},personality:{enthusiasm:95,sarcasm:15,warmth:90},voicePreferences:{gender:"female",age:"young",accent:"american"}},{id:"wise_mentor",name:"Wise Mentor",description:"Smooth, measured voice with wisdom and gentle authority",voiceSettings:{pitch:.85,rate:.8,volume:.8},personality:{enthusiasm:40,sarcasm:70,warmth:85},voicePreferences:{gender:"male",age:"elderly",accent:"british"}},{id:"comedic_sidekick",name:"Comedic Sidekick",description:"Playful, animated voice with lots of personality and humor",voiceSettings:{pitch:1.15,rate:1.1,volume:.9},personality:{enthusiasm:90,sarcasm:80,warmth:75},voicePreferences:{gender:"male",age:"young",accent:"american"}},{id:"dramatic_announcer",name:"Dramatic Announcer",description:"Booming, theatrical voice with dramatic flair and gravitas",voiceSettings:{pitch:.8,rate:.65,volume:.95},personality:{enthusiasm:85,sarcasm:60,warmth:40},voicePreferences:{gender:"male",age:"mature",accent:"american"}},{id:"smooth_operator",name:"Smooth Operator",description:"Suave, sophisticated voice with charm and elegance",voiceSettings:{pitch:.9,rate:.85,volume:.85},personality:{enthusiasm:60,sarcasm:85,warmth:70},voicePreferences:{gender:"male",age:"mature",accent:"british"}},{id:"energetic_coach",name:"Energetic Coach",description:"Motivational, passionate voice with infectious energy",voiceSettings:{pitch:1.1,rate:1.3,volume:.9},personality:{enthusiasm:100,sarcasm:50,warmth:80},voicePreferences:{gender:"male",age:"mature",accent:"american"}}];constructor(){this.initializeVoices()}getVoiceSystemStatus(){return{voicesLoaded:this.voicesLoaded,voiceCacheSize:this.voiceCache.size,availableVoices:"undefined"!=typeof speechSynthesis?speechSynthesis.getVoices().length:0,cachedVoices:Array.from(this.voiceCache.entries()).map(([e,i])=>({characterId:e,voiceName:i.name,voiceLang:i.lang})),characterVoices:this.characterVoices.map(e=>({id:e.id,name:e.name,preferences:e.voicePreferences}))}}async testVoiceConsistency(e){const i=this.characterVoices.find(i=>i.id===e);if(!i)return{error:"Character not found"};this.voicesLoaded||await this.initializeVoices();const s=speechSynthesis.getVoices(),c=this.voiceCache.get(e),a=this.findBestVoiceForCharacter(s,i);return{character:{id:i.id,name:i.name,preferences:i.voicePreferences},cachedVoice:c?{name:c.name,lang:c.lang,voiceURI:c.voiceURI}:null,freshVoice:a?{name:a.name,lang:a.lang,voiceURI:a.voiceURI}:null,isConsistent:c&&a&&c.voiceURI===a.voiceURI,totalVoices:s.length,englishVoices:s.filter(e=>/en/i.test(e.lang)).length}}async initializeVoices(){"undefined"!=typeof speechSynthesis?(this.debugMode&&console.log("ðŸŽ¤ Initializing voice system..."),0===speechSynthesis.getVoices().length&&(this.debugMode&&console.log("ðŸŽ¤ Waiting for voices to load..."),await new Promise(e=>{const i=()=>{speechSynthesis.removeEventListener("voiceschanged",i),this.debugMode&&console.log("ðŸŽ¤ Voices loaded via voiceschanged event"),e()};speechSynthesis.addEventListener("voiceschanged",i),setTimeout(()=>{this.debugMode&&console.log("ðŸŽ¤ Voices loaded via timeout fallback"),e()},1e3)})),this.voicesLoaded=!0,this.cacheVoicesForCharacters()):console.warn("Speech synthesis not available")}cacheVoicesForCharacters(){const e=speechSynthesis.getVoices();this.debugMode&&console.log(`ðŸŽ¤ Caching voices for ${this.characterVoices.length} characters from ${e.length} available voices`);for(const i of this.characterVoices){const s=this.findBestVoiceForCharacter(e,i);s?(this.voiceCache.set(i.id,s),this.debugMode&&console.log(`ðŸŽ¤ Cached voice for ${i.name}: ${s.name} (${s.lang})`)):this.debugMode&&console.warn(`ðŸŽ¤ No suitable voice found for ${i.name}`)}}async getAvailableCharacterVoices(){return this.voicesLoaded||await this.initializeVoices(),this.characterVoices}async speakWithCharacter(e,i){const s=this.characterVoices.find(e=>e.id===i);if(s)try{await this.speakWithCharacterEffects(e,s)}catch(c){console.error("Failed to speak with character voice:",c),this.fallbackToRegularTTS(e)}else console.error("Character voice not found:",i)}async speakWithCharacterEffects(e,i){if("undefined"==typeof speechSynthesis)return void console.warn("Speech synthesis not available");this.voicesLoaded||await this.initializeVoices();const s=new SpeechSynthesisUtterance(e);s.rate=i.voiceSettings.rate,s.pitch=i.voiceSettings.pitch,s.volume=i.voiceSettings.volume;let c=this.voiceCache.get(i.id);if(!c){const e=speechSynthesis.getVoices();c=this.findBestVoiceForCharacter(e,i)||void 0,c&&this.voiceCache.set(i.id,c)}c&&(s.voice=c,console.log(`Using voice for ${i.name}: ${c.name}`)),s.onend=()=>{this.isPlaying=!1},s.onerror=()=>{this.isPlaying=!1},this.isPlaying=!0,speechSynthesis.speak(s)}findBestVoiceForCharacter(e,i){const s=e.filter(e=>/en/i.test(e.lang));if(0===s.length)return e.find(e=>/en/i.test(e.lang))||null;const c=s.map(e=>{let s=0;const c=e.name.toLowerCase(),a=e.lang.toLowerCase();switch(s+=5,"male"===i.voicePreferences.gender?((c.includes("male")||c.includes("david")||c.includes("james")||c.includes("john")||c.includes("mike")||c.includes("tom")||c.includes("alex")||c.includes("daniel")||c.includes("mark"))&&(s+=15),(c.includes("female")||c.includes("sarah")||c.includes("emma")||c.includes("lisa")||c.includes("anna")||c.includes("sophie"))&&(s-=10)):"female"===i.voicePreferences.gender&&((c.includes("female")||c.includes("sarah")||c.includes("emma")||c.includes("lisa")||c.includes("anna")||c.includes("sophie")||c.includes("karen")||c.includes("victoria")||c.includes("samantha"))&&(s+=15),(c.includes("male")||c.includes("david")||c.includes("james")||c.includes("john")||c.includes("mike")||c.includes("tom"))&&(s-=10)),"young"===i.voicePreferences.age?(c.includes("young")||c.includes("teen")||c.includes("kid")||c.includes("alex")||c.includes("emma")||c.includes("sophie"))&&(s+=8):"mature"===i.voicePreferences.age?(c.includes("mature")||c.includes("adult")||c.includes("man")||c.includes("woman")||c.includes("david")||c.includes("sarah"))&&(s+=8):"elderly"===i.voicePreferences.age&&(c.includes("elder")||c.includes("senior")||c.includes("old")||c.includes("wise")||c.includes("calm"))&&(s+=8),"british"===i.voicePreferences.accent?(a.includes("gb")||c.includes("british")||c.includes("uk")||c.includes("victoria")||c.includes("daniel"))&&(s+=12):"american"===i.voicePreferences.accent&&(a.includes("us")||c.includes("american")||c.includes("us")||c.includes("alex")||c.includes("sarah")||c.includes("david"))&&(s+=12),i.id){case"sarcastic_narrator":(c.includes("deep")||c.includes("gravel")||c.includes("rough")||c.includes("david")||c.includes("daniel"))&&(s+=20),(c.includes("calm")||c.includes("mature"))&&(s+=10);break;case"cheerful_host":(c.includes("bright")||c.includes("cheerful")||c.includes("happy")||c.includes("emma")||c.includes("sophie")||c.includes("sarah"))&&(s+=20),(c.includes("young")||c.includes("alex"))&&(s+=10);break;case"wise_mentor":(c.includes("wise")||c.includes("calm")||c.includes("gentle")||c.includes("daniel")||c.includes("victoria"))&&(s+=20),(c.includes("mature")||c.includes("elder"))&&(s+=10);break;case"comedic_sidekick":(c.includes("playful")||c.includes("energetic")||c.includes("alex")||c.includes("emma")||c.includes("sophie"))&&(s+=20),(c.includes("young")||c.includes("teen"))&&(s+=10);break;case"dramatic_announcer":(c.includes("dramatic")||c.includes("theatrical")||c.includes("booming")||c.includes("david")||c.includes("daniel"))&&(s+=20),(c.includes("deep")||c.includes("mature"))&&(s+=10);break;case"smooth_operator":(c.includes("smooth")||c.includes("suave")||c.includes("sophisticated")||c.includes("daniel")||c.includes("victoria"))&&(s+=20),(c.includes("mature")||c.includes("calm"))&&(s+=10);break;case"energetic_coach":(c.includes("energetic")||c.includes("motivational")||c.includes("passionate")||c.includes("alex")||c.includes("david"))&&(s+=20),(c.includes("mature")||c.includes("adult"))&&(s+=10)}return(c.includes("premium")||c.includes("enhanced")||c.includes("natural"))&&(s+=5),(c.includes("system")||c.includes("default")||c.includes("basic"))&&(s-=5),{voice:e,score:s}});return c.sort((e,i)=>i.score-e.score),this.debugMode&&c.length>0&&(console.log(`ðŸŽ¤ Voice selection for ${i.name}:`),console.log("ðŸŽ¤ Top 3 candidates:"),c.slice(0,3).forEach((e,i)=>{console.log(`ðŸŽ¤ ${i+1}. ${e.voice.name} (${e.voice.lang}) - Score: ${e.score}`)})),c[0]?.voice||s[0]}fallbackToRegularTTS(e){if("undefined"==typeof speechSynthesis)return void console.warn("Speech synthesis not available");const i=new SpeechSynthesisUtterance(e);i.rate=1,i.pitch=1,i.volume=.8,i.onend=()=>{this.isPlaying=!1},i.onerror=()=>{this.isPlaying=!1},this.isPlaying=!0,speechSynthesis.speak(i)}stop(){this.isPlaying=!1,"undefined"!=typeof speechSynthesis&&speechSynthesis.cancel()}isCurrentlyPlaying(){return this.isPlaying||"undefined"!=typeof speechSynthesis&&speechSynthesis.speaking}getCharacterVoice(e){return this.characterVoices.find(i=>i.id===e)}getDefaultCharacterVoice(){return this.characterVoices[0]}};export{e as c};
