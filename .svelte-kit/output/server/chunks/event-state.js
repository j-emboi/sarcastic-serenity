import*as e from"devalue";import{b as n,t as r,c as t}from"./utils.js";let o,s=null;function a(){const e=s??o?.getStore();if(!e){let e="Can only read the current request event inside functions invoked during `handle`, such as server `load` functions, actions, endpoints, and other server hooks.";throw o||(e+=" In environments without `AsyncLocalStorage`, the event must be read synchronously, not after an `await`."),new Error(e)}return e}function i(e,n){try{return s=e,o?o.run(e,n):n()}finally{s=null}}function c(e,n){const r=/^(moz-icon|view-source|jar):/.exec(n);r&&console.warn(`${e}: Calling \`depends('${n}')\` will throw an error in Firefox because \`${r[1]}\` is a special URI scheme`)}import("node:async_hooks").then(e=>o=new e.AsyncLocalStorage).catch(()=>{});const l="x-sveltekit-invalidated",u="x-sveltekit-trailing-slash";function d(n,r){const t=Object.fromEntries(Object.entries(r).map(([e,n])=>[e,n.encode]));return e.stringify(n,t)}function f(e,r){if(void 0===e)return"";const t=d(e,r),o=(new TextEncoder).encode(t);return n(o).replaceAll("=","").replaceAll("+","-").replaceAll("/","_")}function p(n,o){if(!n)return;const s=r.decode(t(n.replaceAll("-","+").replaceAll("_","/"))),a=Object.fromEntries(Object.entries(o).map(([e,n])=>[e,n.decode]));return e.parse(s,a)}function h(e,n){return e+"/"+n}const m=Symbol("remote");function v(e,n){return{prerendering:e.prerendering,transport:n.hooks.transport,handleValidationError:n.hooks.handleValidationError}}function w(e){return e[m]}export{m as E,l as I,u as T,a,h as b,v as c,f as d,w as g,p,d as s,c as v,i as w};
